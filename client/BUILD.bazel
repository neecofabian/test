load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//client:typescript/package_json.bzl", vue_tsc_bin = "bin")
load("@npm//client:vite/package_json.bzl", vite_bin = "bin")
load("@npm//client:vitest/package_json.bzl", vitest_bin = "bin")

# This macro expands to a link_npm_package for each third-party package in package.json
npm_link_all_packages(name = "node_modules")

SRCS = [
    "env.d.ts",
    "index.html",
    "package.json",
    "postcss.config.js",
    "tailwind.config.js",
    "tsconfig.config.json",
    "tsconfig.json",
    "vite.config.ts",
    "vitest.setup.ts",
    ".eslintrc.js",
    "//client/src",
]

js_library(
    name = "eslintrc_js",
    srcs = [".eslintrc.js"],
    deps = [
        ":node_modules/@shopify/prettier",
        ":node_modules/@shopify/react",
        ":node_modules/@shopify/typescript",
    ],
)

BUILD_DEPS = [":node_modules/" + d for d in [
    "@radix-ui/react-slot",
    "@radix-ui/react-dropdown-menu",
    "@shopify/eslint-plugin",
    "@shopify/typescript-configs",
    "@testing-library/jest-dom",
    "@vitejs/plugin-react",
    "autoprefixer",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "postcss",
    "postcss-calc",
    "postcss-flexbugs-fixes",
    "react",
    "react-dom",
    "tailwind-merge",
    "tailwindcss",
    "tailwindcss-animate",
    "vite",
    "vitest",
]]

vite_bin.vite(
    name = "build",
    srcs = SRCS + BUILD_DEPS,
    args = ["build"],
    chdir = package_name(),
    out_dirs = ["dist"],
)

filegroup(
    name = "vite_srcs_export",
    srcs = glob(["src/**/*"]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "vite_public_export",
    srcs = glob(["public/**/*"]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "vite_srcs_tests",
    srcs = glob([
        "src/**/*.spec.ts",
        "tests/**/*",
        "src/**/*.test.*",
    ]),
    visibility = ["//visibility:public"],
)

vitest_bin.vitest_test(
    name = "vitest",
    args = [
        "run",
        "--config=vite.config.ts",
    ],
    chdir = package_name(),
    data = BUILD_DEPS + SRCS + [":vite_srcs_export"] + [":vite_srcs_tests"],
    visibility = ["//visibility:public"],
)

vite_bin.vite_binary(
    name = "vite",
    chdir = package_name(),
    data = SRCS + BUILD_DEPS,
)

build_test(
    name = "build_test",
    targets = [
        ":build",
        ":vitest",
    ],
)
